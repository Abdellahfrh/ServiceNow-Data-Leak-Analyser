<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_page">
    <sys_ui_page action="INSERT_OR_UPDATE">
        <category>general</category>
        <client_script/>
        <description/>
        <direct>true</direct>
        <endpoint>x_376096_dla_analyse_widgets.do</endpoint>
        <html><![CDATA[<?xml version="1.0" encoding="utf-8" ?>
<j:jelly trim="false" xmlns:j="jelly:core" xmlns:g="glide" xmlns:j2="null" xmlns:g2="null">
	<g:evaluate var="jvar_refresh" expression="RP.getParameterValue('refresh')" />
	<j:if test="${!empty(jvar_refresh)}">
		<script>
			(function refreshReportTable() {
				// as the page is reloaded after a click on "Analyse ACLs", the report table will
				// be always "up-to-date"
				var parentWindow = window.parent;
				if (parentWindow $[AND] parentWindow.GlideLists2) {
					for (var listID in parentWindow.GlideLists2) {
						var list = parentWindow.GlideLists2[listID];
						// On Dashboard-Tab-Switch, the a new GlideList Object is created, but the
						// old Objects are not cleaned up.
						// Refreshing the dead lists will result in a crash!
						var domElementExists = !!parentWindow.document.getElementById(listID);
						if (list.tableName == 'x_376096_dla_widget_result' $[AND] domElementExists) {
							list.refresh();
						}
					}
				}
			})();
		</script>
	</j:if>
	<g2:evaluate>
		let runWidgetAnalysis = false;
		let buttonLabel = 'Analyse Widgets';
		const widgetResultGr = new GlideRecord('x_376096_dla_widget_result');
		widgetResultGr.setLimit(1);
		widgetResultGr.query();
		if (widgetResultGr.hasNext()) {
			buttonLabel = 'Re-Analyse Widgets';
		} else {
			runWidgetAnalysis = true;
		}
	</g2:evaluate>
	<g:ui_form>
		<button class="action button" type="submit" onclick="this.disabled=true; this.form.submit();">
			$[buttonLabel]
		</button>
	</g:ui_form>
	<j2:if test="$[runWidgetAnalysis]">
		<script>
			(function () {
				document.querySelector('#form\\.e79910199742f1103c2d3f56f053af68 button').click();
			})();
		</script>
	</j2:if>
</j:jelly>]]></html>
        <name>analyse_widgets</name>
        <processing_script><![CDATA[/* global x_376096_dla, GlideRecord */
/* global request, response */
/* eslint no-undef: "error" */
(function (request, response) {
	// request [GlideServletRequest]
	// https://developer.servicenow.com/dev.do#!/reference/api/sandiego/server/no-namespace/c_GlideServletRequestScopedAPI
	
	// response [GlideServletResponse]
	// https://developer.servicenow.com/dev.do#!/reference/api/sandiego/server/no-namespace/c_GlideServletResponseScopedAPI
	
	// this
	// [represents the values from the <g:ui_form>]
	const affectedWidgets = new x_376096_dla.DLAUtil().analyseWidgets();
	const widgets = [];
	affectedWidgets.forEach(widget => {
		widgets.push(widget.sys_id);
		
		const widgetResultTaskGr = new GlideRecord('x_376096_dla_widget_result');
		widgetResultTaskGr.addQuery('widget', widget.sys_id);
		widgetResultTaskGr.setLimit(1);
		widgetResultTaskGr.query();
		if (widgetResultTaskGr.next()) {
			if (widgetResultTaskGr.priority != widget.priority ||
				!widgetResultTaskGr.description.toString().includes(widget.reason)) {
				widgetResultTaskGr.priority = widget.priority;
				widgetResultTaskGr.work_notes += 'Updated Analysis:\nReason for Potential Data Leak: ' + widget.reason;
			}
			
			return;
		}
		
		widgetResultTaskGr.newRecord();
		widgetResultTaskGr.widget = widget.sys_id;
		widgetResultTaskGr.priority = widget.priority;
		widgetResultTaskGr.short_description = 'Verify Widget for Potential Data Leak';
		widgetResultTaskGr.description = 'This widget has been identified as a "Potential Data Leak" by a machine scan.\nThe reason is: ' + widget.reason + '\n\nPlease carefully verify if the Widget is aligned to currently known best practice and close this task with a proper closure note.';
		widgetResultTaskGr.insert();
	});
	
	const widgetResultGr = new GlideRecord('x_376096_dla_widget_result');
	widgetResultGr.addQuery('active', true);
	widgetResultGr.addQuery('widget', 'NOT IN', widgets);
	widgetResultGr.setValue('state', 3); // closed complete
	widgetResultGr.setValue('work_notes', 'Task has been closed as the affected Widget is no longer included in the latest Widget analysis.');
	widgetResultGr.updateMultiple();
	
	response.sendRedirect('x_376096_dla_analyse_widgets.do?refresh=true');
}).call(this, request, response);]]></processing_script>
        <sys_class_name>sys_ui_page</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-10-21 17:26:55</sys_created_on>
        <sys_id>e79910199742f1103c2d3f56f053af68</sys_id>
        <sys_mod_count>22</sys_mod_count>
        <sys_name>analyse_widgets</sys_name>
        <sys_package display_value="Data Leak Analyser" source="x_376096_dla">7ab9de70978671103c2d3f56f053af17</sys_package>
        <sys_policy/>
        <sys_scope display_value="Data Leak Analyser">7ab9de70978671103c2d3f56f053af17</sys_scope>
        <sys_update_name>sys_ui_page_e79910199742f1103c2d3f56f053af68</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-10-24 18:47:02</sys_updated_on>
    </sys_ui_page>
</record_update>
